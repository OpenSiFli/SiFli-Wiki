str_cn:检查供电是否正确,str_en:Check if the power supply is correct
str_cn:检查IO电压是否匹配（我们芯片支持1.8V的IO, 有不少LCD是3.3V),str_en:Check if the IO voltage matches (our chip supports 1.8V IO, and many LCDs are 3.3V)
str_cn:检查屏幕复位时间是否足够,str_en:Check if the screen reset time is sufficient
str_cn:尝试降低接口频率,str_en:Try reducing the interface frequency
str_cn:检查时序,str_en:Check the timing
str_cn:将系统时钟降到48M,str_en:Reduce the system clock to 48M
str_cn:这是为了降低LCDC往DSI送数的速度,str_en:This is to reduce the speed at which LCDC sends data to DSI
str_cn:调整DSI LP 模式的频率到屏幕能支持的范围(一般在6~20Mbps),str_en:Adjust the frequency of DSI LP mode to the range supported by the screen (generally 6~20Mbps)
str_cn:将所有命令都改成LP模式(低速模式)发送,str_en:Change all commands to LP mode (low-speed mode) for transmission
str_cn:检查ID是否可以读到,str_en:Check if the ID can be read
str_cn:先关闭TE，防止TE信号没有导致LCD控制器不送数据,str_en:First turn off TE to prevent the absence of TE signal from causing the LCD controller not to send data
str_cn:检查送的数据是否是全黑色的,str_en:Check if the sent data is all black
str_cn:我们的LCD控制器 可以转换不同格式的framebuffer到LCD输出接口，确保framebuffer和LCD输出两端的配置正确,str_en:Our LCD controller can convert framebuffer of different formats to the LCD output interface, ensuring that the configurations on both sides of framebuffer and LCD output are correct
str_cn:framebuffer的颜色格式设置示例（RGB565格式的framebuffer),str_en:Example of framebuffer color format setting (framebuffer in RGB565 format)
str_cn:LCD控制器输出的颜色格式示例（DSI输出RGB888),str_en:Example of LCD controller output color format (DSI output RGB888)
str_cn:framebuffer送到LCDC控制器后先转成RGB888格式的数据，然后送给DSI链路控制器再输出RGB888数据,str_en:The framebuffer is first converted into RGB888 format data after being sent to the LCDC controller, and then sent to the DSI link controller to output RGB888 data again
str_cn:检查framebuffer的颜色格式和LCD控制器送出的颜色格式是否正确,str_en:Check if the color format of the framebuffer and the color format sent out by the LCD controller are correct
str_cn:检查IC输出的屏幕区域和液晶玻璃的分辨率是否一致,str_en:Check whether the screen area output by the IC and the resolution of the liquid crystal glass are consistent
str_cn:是否没有送数，显示的默认GRAM数据,str_en:Whether there is no data sent, displaying the default GRAM data
str_cn:检查设置LCD接受数据区域的偏移是否正确,str_en:Check if the offset of the area where the LCD accepts data is correct
str_cn:检查送的数据是否正确,str_en:Check if the sent data is correct
str_cn:死机原因,str_en:The reason for the crash
str_cn:客户有些屏幕分辨率比如是320x385, 但是他的对齐要求却是2，按照对齐要求分辨率必须都是偶数,str_en:For some customers, the screen resolution is 320x385, but the alignment requirement is 2, according to which the resolution must be even numbers
str_cn:解决思路,str_en:Solution approach
str_cn:对上还是提供满足对齐要求的分辨率的屏幕，只改动驱动代码,str_en:Still provide a screen with resolution that meets the alignment requirements, only modify the driver code
str_cn:解决办法,str_en:Solutions
str_cn:在Kconfig定义屏幕分辨率时，需要按照对齐后的分辨率配置，虚拟一个满足对齐要求的屏幕,str_en:When defining the screen resolution in Kconfig, it needs to be configured according to the aligned resolution, virtually creating a screen that meets the alignment requirements
str_cn:Kconfig对应的宏是LCD_HOR_RES_MAX 和 LCD_VER_RES_MAX,str_en:The corresponding macros in Kconfig are LCD_HOR_RES_MAX and LCD_VER_RES_MAX
str_cn:在LCD驱动的xxxx_SetRegion函数里面，检查送进来的参数是否超过真实的分辨率，咨询屏厂该如何处理,str_en:In the xxxx_SetRegion function of the LCD driver, check whether the incoming parameters exceed the real resolution, and consult the screen factory on how to deal with it
str_cn:有的屏幕是直接截取,str_en:Some screens are directly intercepted
str_cn:有的屏幕是可以直接刷，也不会覆盖到第一行,str_en:Some screens can be directly refreshed without covering the first row
str_cn:这种问题参考《对齐要求和屏幕分辨率不符合的死机》的做法，只在驱动层进行截取即可，对上还是提供满足要求的屏幕,str_en:This issue refers to the practice of "crash due to misalignment requirements and screen resolution", just intercept at the driver level, still provide a screen that meets the requirements
str_cn:是比较常见的刷屏超时死机，原因是因为没有等到屏幕的TE信号，而超时死机,str_en:It is a relatively common screen refresh timeout crash, the reason is that the screen's TE signal was not waited for, resulting in a timeout crash
str_cn:超时时间定义在`MAX_LCD_DRAW_TIME`,默认是500ms,str_en:The timeout time is defined in `MAX_LCD_DRAW_TIME`, the default is 500ms
str_cn:“draw core timeout”  -- 代表的是刷屏没有等到TE，从而超时死机,str_en:"draw core timeout" - represents the screen refresh did not wait for TE, resulting in a timeout crash
str_cn:STATUS=1 代表LCDC控制器一直处于忙状态,str_en:STATUS=1 means the LCDC controller is always busy
str_cn:TE=3 只需看bit0， bit0 如果是1代表LCDC在刷屏之前需要等TE信号，0代表不需要等TE信号,str_en:TE=3 only need to look at bit0, if bit0 is 1, it means LCDC needs to wait for the TE signal before refreshing the screen, 0 means no need to wait for the TE signal
str_cn:CANVAS 的TL, BR是刷新区域的坐标,str_en:CANVAS's TL, BR are the coordinates of the refresh area
str_cn:TL的高16bit是y0, 低16bit是x0 BR的高16bit是y1, 低16bit是x1 组成刷新区域{x0,y0,x1,y1},str_en:The high 16 bits of TL are y0, the low 16 bits are x0 the high 16 bits of BR are y1, the low 16 bits are x1 forming the refresh area {x0,y0,x1,y1}
str_cn:LAYER0的TL,BR是framebuffer所在的区域左边，格式同上面的CANVAS的TL,BR类似,str_en:LAYER0's TL, BR are the left side of the area where the framebuffer is located, the format is similar to the above-mentioned CANVAS's TL, BR
str_cn:SRC是framebuffer的数据地址,str_en:SRC is the data address of the framebuffer
str_cn:如果是一开机就出现这个死机，大概率是屏驱有问题，检查屏幕的上电、复位，屏初始化代码等,str_en:If this crash occurs as soon as the device is turned on, it is highly likely that there is a problem with the screen drive, check the screen power-on, reset, screen initialization code, etc.
str_cn:如果是睡眠唤醒出现这个死机，可能是初始化的复位时间不够，或者睡眠时关闭屏幕的流程不符合要求,str_en:If this crash occurs during sleep wake-up, it may be that the reset time for initialization is not enough, or the process of turning off the screen during sleep does not meet the requirements
str_cn:如果刷屏期间突然出现这个死机，可能屏驱不稳定（比如IO电平不匹配、速率太高），或者静电导致屏驱IC死机。,str_en:If the system crashes suddenly during screen refresh, it may be due to unstable screen drive (e.g., mismatched IO levels, excessively high speed) or electrostatics causing the screen drive IC to crash.
