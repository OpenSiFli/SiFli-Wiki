str_cn:调屏推荐采用rt-driver工程，调试前确认rt-driver工程能正常运行并有Log打印,str_en:It is recommended to use the rt-driver project for screen adjustment, and confirm that the rt-driver project can run normally and has Log printing before debugging
str_cn:进入`example\rt_driver\project`目录，右键选择`ComEmu_Here`弹出编译命令串口，依次执行,str_en:Enter the `example\rt_driver\project` directory, right-click to select `ComEmu_Here` to pop up the compilation command serial port, and execute in sequence
str_cn:设置编译环境路径,str_en:Set compilation environment path
str_cn:指定em-lb566模块编译rt-driver工程,str_en:Specify em-lb566 module to compile rt-driver project
str_cn:BOOT_MODE拉高到3.3V，566进入`boot`模式便于下载,str_en:BOOT_MODE is pulled up to 3.3V, 566 enters `boot` mode for easy downloading
str_cn:进入boot模式后，串口会有如下Log输出，命令输入`help`,也会有Log输出，代表串口MCU运行正常，串口通讯正常，点击断开串口，准备进行下载,str_en:After entering the boot mode, the serial port will output the following Log. If you input the command `help`, there will also be Log output, indicating that the serial port MCU is running normally and the serial communication is normal. Click to disconnect the serial port and prepare for downloading
str_cn:去掉步骤1.2时的短接跳线，上电复位，让MCU跑用户程序，如果输出如下Log，表示开发板已经正常运行，接下去就可以继续下一步添加新屏幕模组,str_en:Remove the short-circuit jumper in step 1.2, power on reset, let the MCU run the user program, if the following Log is output, it means the development board has been running normally, then you can continue to the next step to add a new screen module
str_cn:屏驱动位于`sdk\customer\peripherals`目录,str_en:The screen driver is located in the `sdk\customer\peripherals` directory
str_cn:复制一份其他`dpi`接口的驱动更名为`dpi_nv3052c`,str_en:Copy a driver of another `dpi` interface and rename it as `dpi_nv3052c`
str_cn:文本编辑器打开sdk\customer\boards\Kconfig_lcd，添加一个DPI屏的选项和分辨率，如下,str_en:Open sdk\customer\boards\Kconfig_lcd with a text editor, add an option and resolution for DPI screen as follows
str_cn:menuconfig中显示的字符,str_en:Characters displayed in menuconfig
str_cn:如果有TP可以打开，对应TP的驱动是否编译依赖此宏,str_en:If TP is available, it can be opened. Whether the corresponding TP driver is compiled depends on this macro
str_cn:spi_nv3052c文件夹内文件是否的编译依赖于此宏,str_en:Whether the files in the spi_nv3052c folder are compiled depends on this macro
str_cn:选择DPI接口,str_en:Select DPI interface
str_cn:是否打开屏的PWM背光，有背光的屏需要打开,str_en:Whether to turn on the PWM backlight of the screen, screens with backlight need to be turned on
str_cn:选择DPI屏是否需要SPI进行初始化,str_en:Select whether the DPI screen needs SPI for initialization
str_cn:软件SPI中CS脚,str_en:CS pin of software SPI
str_cn:软件SPI中CLK脚,str_en:CLK pin of software SPI
str_cn:软件SPI中MOSI脚,str_en:MOSI pin of software SPI
str_cn:LCD_HOR_RES_MAX 配置为该屏的水平分辨率,str_en:LCD_HOR_RES_MAX is configured as the horizontal resolution of the screen
str_cn:LCD_VER_RES_MAX 配置为该屏的垂直分辨率,str_en:LCD_VER_RES_MAX is configured as the vertical resolution of the screen
str_cn:LCD_DPI 像素密度，为屏一英寸多少个像素点，不知道就填默认315,str_en:LCD_DPI pixel density, how many pixels per inch of the screen, fill in the default 315 if unknown
str_cn:文本编辑器打开文件`sdk\customer\peripherals\Kconfig`,添加如下,str_en:Open the file `sdk\customer\peripherals\Kconfig` with a text editor, and add the following
str_cn:文本编辑器打开文件`customer\peripherals\dpi_nv3052c\SConscript`，修改宏`LCD_USING_NV3052C`,这样该目录下的*.c和*.h文件就能加入编译,str_en:Open the file `customer\peripherals\dpi_nv3052c\SConscript` with a text editor, modify the macro `LCD_USING_NV3052C`, so that the *.c and *.h files in this directory can be added to the compilation
str_cn:以上步骤完成后，编译窗口输入下面命令，并选中刚添加的nv3052c屏,str_en:After completing the above steps, enter the following command in the compilation window and select the newly added nv3052c screen
str_cn:在这个路径下`(Top) → Config LCD on board → Enable LCD on the board → Select LCD`选中刚添加的屏，示例如下，如果该DPI屏有SPI接口需要初始化，才选中`lcd init using soft spi interface`,并配置好SPI所用的三个IO口，保存退出后，则选中了dpi_nv3052c目录下屏驱动参加编译,str_en:In this path `(Top) → Config LCD on board → Enable LCD on the board → Select LCD`, select the newly added screen. As shown in the example below, if the DPI screen has an SPI interface that needs to be initialized, only then select `lcd init using soft spi interface`, and configure the three IO ports used by SPI. After saving and exiting, the screen driver under the dpi_nv3052c directory is selected to participate in the compilation
str_cn:为了便于查看参加编译的代码，可以生成rt-driver整个工程参加编译的文件list，再导入到Source Insight中便于查看，可以跳过此章节,str_en:In order to easily view the code participating in the compilation, you can generate a list of files for the entire rt-driver project to participate in the compilation, and then import it into Source Insight for easy viewing. This chapter can be skipped
str_cn:命令`scons --board=em-lb566 --target=si`生成`si_filelist.txt`,str_en:The command `scons --board=em-lb566 --target=si` generates `si_filelist.txt`
str_cn:打开Source Insight导入`si_filelist.txt`进入工程,str_en:Open Source Insight to import `si_filelist.txt` into the project
str_cn:可以在SI（Source Insight）工程中查看`rtconfig.h`对应宏是否生成和是否已经包含了`dpi_nv3052c.c`加入编译,str_en:You can check in the SI (Source Insight) project whether the corresponding macro in `rtconfig.h` is generated and whether `dpi_nv3052c.c` has been included in the compilation
str_cn:如果购买的是匹配的屏幕模组，直接排线连接到插座即可,str_en:If you purchase a matching screen module, just connect the ribbon cable to the socket
str_cn:如果新的屏幕模组，排线排列不一致，就需要自己设计排线转接板或者从插针飞线调试,str_en:If the new screen module has inconsistent ribbon cable arrangement, you need to design your own ribbon cable adapter board or debug from the pin flying wires
str_cn:转接板的设计可以参考[SF32LB52-DevKit-LCD转接板制作指南],str_en:The design of the adapter board can refer to [SF32LB52-DevKit-LCD Adapter Board Production Guide]
str_cn:如果采用的默认IO，此处可以跳过,str_en:If the default IO is used, this part can be skipped
str_cn:LCD采用的是LCDC1硬件来输出波形，需配置为对应的FUNC模式,str_en:LCD uses LCDC1 hardware to output waveforms and needs to be configured to the corresponding FUNC mode
str_cn:每个IO有哪些Funtion可以参考硬件文档,str_en:For each IO, you can refer to the hardware documentation for its functions
str_cn:LCD和TP的RESET脚都是采用GPIO模式，则默认已经配置为GPIO模式，如果LCD供电需要单独打开，也需要在这里打开,str_en:The RESET pins of the LCD and TP both use GPIO mode, which is already configured as GPIO mode by default. If the LCD power supply needs to be turned on separately, it also needs to be turned on here
str_cn:下面是上电LCD初始化流程,str_en:The following is the power-on LCD initialization process
str_cn:可以看到上电BSP_LCD_PowerUp在屏驱动初始化LCD_drv.LCD_Init之前,str_en:It can be seen that the power-on BSP_LCD_PowerUp occurs before the screen driver initialization LCD_drv.LCD_Init
str_cn:所以需要在初始化LCD前，确保BSP_LCD_PowerUp中已经打开LCD供电,str_en:Therefore, before initializing the LCD, ensure that the LCD power supply has been turned on in BSP_LCD_PowerUp
str_cn:背光PWM配置,str_en:Backlight PWM configuration
str_cn:pwm软件中有一个默认配置，配置在文件customer\boards\sf32lb5x-lcd\Kconfig.board中，此Kconfig.board的配置会编译后在rtconfig.h中生成下面3个宏,str_en:The PWM software has a default configuration, located in the file customer\boards\sf32lb5x-lcd\Kconfig.board. This Kconfig.board configuration will generate the following three macros in rtconfig.h after compilation
str_cn:用PWM4需要打开GPTIM3，Lcpu中也需要打开（否则Lcpu可能会关掉GPTIM3），还需确认rtconfig.h下面宏是否生效,str_en:Using PWM4 requires turning on GPTIM3, and it also needs to be turned on in Lcpu (otherwise Lcpu may turn off GPTIM3). It is also necessary to confirm whether the following macros in rtconfig.h are effective
str_cn:软件默认PB23从`GPTIM3`的`"pwm4"`设备输出PWM波形，默认配置在,str_en:The software defaults PB23 to output PWM waveform from the `"pwm4"` device of `GPTIM3`, with default configuration at
str_cn:通过函数`HAL_PIN_Set`配置后，GPTIM3_CH4跟PB23的对应关系就会建立起来，具体体现在寄存器配置`hwp_lpsys_cfg->GPTIM3_PINR`中,str_en:After configuring through the function `HAL_PIN_Set`, the corresponding relationship between GPTIM3_CH4 and PB23 will be established, specifically reflected in the register configuration `hwp_lpsys_cfg->GPTIM3_PINR`
str_cn:可以看到可以配置为CH1-CH4输出，而且必须是PB00-PB31口，另外Hcpu用Lcpu的TIMER资源，Lcpu也需要打开`#define BSP_USING_GPTIM3 1`,否则在早期的SDK代码`drv_common.c`中会关闭`RCC_MOD_GPTIM3`导致PWM4无输出,str_en:It can be seen that it can be configured to output CH1-CH4, and it must be the PB00-PB31 port. Additionally, Hcpu uses Lcpu's TIMER resources, so Lcpu also needs to enable `#define BSP_USING_GPTIM3 1`. Otherwise, in the early SDK code `drv_common.c`, `RCC_MOD_GPTIM3` will be turned off, resulting in no output for PWM4
str_cn:nv3052c.c中LCD_Init函数中下面几个延时比较关键，需要参照屏驱IC相关文档的初始化时序，谨慎修改,str_en:In nv3052c.c, the following delays in the LCD_Init function are critical. They need to refer to the initialization timing of the screen driver IC related documents and modify them cautiously
str_cn:DPI接口屏有些不需要SPI，初始化，不需要打开宏`LCD_USING_SOFT_SPI`,屏驱IC上电复位后，就可以往RGB数据线送数，有些DPI屏需要先用SPI接口进行寄存器初始化配置参数，每个屏驱IC的初始化寄存器配置不一样，需要按照屏厂提供的寄存器参数，按照他们的SPI时序依次写入屏驱IC,特别注意0x11和0x29寄存器后的延时长度要求,str_en:Some DPI interface screens do not require SPI or initialization, and there is no need to enable the macro `LCD_USING_SOFT_SPI`. After the screen driver IC is powered on and reset, data can be sent to the RGB data line. Some DPI screens require initial configuration parameters using the SPI interface first. The initialization register configuration for each screen driver IC is different, and it is necessary to write to the screen driver IC according to the register parameters provided by the screen manufacturer and their SPI timing. Pay special attention to the delay length requirements after registers 0x11 and 0x29
str_cn:.lcd_itf ： 选择LCDC_INTF_DPI_AUX表示DPI接口模式,str_en:.lcd_itf: Select LCDC_INTF_DPI_AUX to indicate DPI interface mode
str_cn:.freq ：选择 35 * 1000 * 1000,，表示DPI的clk主频为35Mhz，这个时钟要依据屏驱IC支持的最高时钟来选择，越高每帧送数时间越短，帧率会越高,str_en:.freq: Choose 35 * 1000 * 1000, indicating that the main frequency of DPI clk is 35Mhz. This clock should be selected based on the highest clock supported by the screen driver IC. The higher the clock, the shorter the time to send each frame, and the higher the frame rate
str_cn:.color_mode ：选择RGB565 还是RGB888格式,str_en:.color_mode: Choose between RGB565 or RGB888 format
str_cn:如果飞线调试的话，RGB数据线较多，接线错误会导致无显示或者显示异常，可以采用下面测试RGB接口函数，R0-R7,G0-G7,B0-B7顺序输出波形，可以逻辑分析仪抓波形查看飞线是否正确,str_en:If debugging with flying leads, there are many RGB data lines, and incorrect wiring can lead to no display or abnormal display. You can use the following test RGB interface function, which outputs waveforms in the order of R0-R7, G0-G7, B0-B7, and you can use a logic analyzer to capture the waveform to check if the flying leads are correct
str_cn:如下图,如果显示正常会依次6种图像，3秒定时循环显示,str_en:As shown in the figure below, if the display is normal, six images will be displayed in sequence, with a 3-second timed loop display
