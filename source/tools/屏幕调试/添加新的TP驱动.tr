str_cn:添加新的TP驱动,str_en:Add a new TP driver
str_cn:添加新的TP驱动主要分为：,str_en:Adding a new TP driver mainly includes:
str_cn:在Kconfig文件中增加驱动IC的宏定义,str_en:Add macro definitions for the driver IC in the Kconfig file
str_cn:复制类似的驱动代码并加入编译,str_en:Copy similar driver code and add it to the compilation
str_cn:修改复制的TP驱动文件,str_en:Modify the copied TP driver file
str_cn:打开SDK\customer\peripherals\Kconfig文件里面有很多类似TSC_USING_XXX的config，在后面添加新的config：,str_en:Open the SDK\customer\peripherals\Kconfig file which contains many configs like TSC_USING_XXX, and append a new config:
str_cn:在SDK\customer\peripherals目录下找一个类似且已适配过的TP驱动,str_en:Find a similar and already adapted TP driver in the SDK\customer\peripherals directory
str_cn:将整个目录copy一份，并将其目录名称改成"gt911",str_en:Copy the entire directory and rename it to "gt911"
str_cn:里面的屏驱.c/.h文件也改成gt911.c/.h, 并修改里面的内容。,str_en:Change the screen drive .c/.h files inside to gt911.c/.h and modify their contents.
str_cn:里面的SConscript文件中的depend宏改为前面添加的‘TSC_USING_GT911’，让新加的文件加入编译,str_en:Change the depend macro in the SConscript file to the previously added 'TSC_USING_GT911' so that the newly added files are included in the compilation
str_cn:修改注册的信号量名称,str_en:Modify the registered semaphore name
str_cn:修改这个信号量名称为gt911,str_en:Change this semaphore name to gt911
str_cn:修改probe函数里面的通信接口,str_en:Modify the communication interface in the probe function
str_cn:打开通信接口（比如I2C），配置接口频率、超时时间等,str_en:Open the communication interface (e.g., I2C), configure the interface frequency, timeout, etc.
str_cn:读取某个寄存器，根据TP是否在位（比如TP的某个状态寄存器）返回状态。,str_en:Read a certain register and return the status based on whether the TP is present (e.g., a certain status register of the TP).
str_cn:如果不需要做多TP驱动兼容，可直接返回RT_EOK(TP在位）,str_en:If multi-TP driver compatibility is not required, you can directly return RT_EOK (TP is present)
str_cn:修改Init函数,str_en:Modify the Init function
str_cn:复位TP,str_en:Reset the TP
str_cn:配置TP中断GPIO的触发条件，注册中断回调处理函数,str_en:Configure the trigger condition of the TP interrupt GPIO, and register the interrupt callback handling function
str_cn:建议使用下列接口,不要使用rt_pin_xxx接口：,str_en:It is recommended to use the following interfaces instead of rt_pin_xxx interfaces:
str_cn:TP中断注册,str_en:Register the TP interrupt
str_cn:中断使能和去使能,str_en:Enable and disable interrupts
str_cn:修改中断回调函数,str_en:Modify the interrupt callback function
str_cn:关掉GPIO中断使能,str_en:Turn off the GPIO interrupt enable
str_cn:释放信号量（触发上层调用read_point读取数据）,str_en:Release the semaphore (trigger the upper layer to call read_point to read data)
str_cn:修改读TP数据回调函数,str_en:Modify the read TP data callback function
str_cn:通过通信接口（比如I2C)读取TP的数据,str_en:Read TP data through the communication interface (e.g., I2C)
str_cn:读取完毕后使能TP中断（触发下一次读取）,str_en:Enable the TP interrupt after reading is completed (to trigger the next read)
str_cn:将数据转存并返回，注意：返回值不能始终返回RT_EOK, 否则会陷入死循环。如果读取触控数据结束，请返回RT_EEMPTY。,str_en:Store and return the data. Note: The return value should not always be RT_EOK, otherwise, it will fall into an infinite loop. If the touch data reading is finished, please return RT_EEMPTY.
str_cn:通过I2C  读取TP数据,str_en:Read TP data via I2C
str_cn:使能TP中断,str_en:Enable the TP interrupt
str_cn:返回TP数据到p_msg,str_en:Return TP data to p_msg
str_cn:代表数据已经读完。,str_en:Indicates that the data has been read completely.
