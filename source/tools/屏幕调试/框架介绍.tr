str_cn:思澈的显示框架是基于rt_device框架的，具有如下特点,str_en:SiChu's display framework is based on the rt_device framework and has the following characteristics
str_cn:同一个屏幕驱动、TP驱动、背光驱动可以在不同的开发板之间复用,str_en:The same screen driver, TP driver, and backlight driver can be reused among different development boards
str_cn:同一个开发板可以通过menuconfig选择不同的屏幕模组,str_en:The same development board can choose different screen modules through menuconfig
str_cn:支持同时兼容多个屏幕驱动、TP驱动，根据ID来区分,str_en:Supports simultaneous compatibility with multiple screen drivers and TP drivers, distinguished by ID
str_cn:这样设计确实提高了复用度，但也给屏幕模组驱动配置带来了分散性的问题,str_en:This design does indeed improve reuse, but it also brings dispersion problems to the screen module driver configuration
str_cn:屏幕模组的上下电、复位接口、pinmux的设置、背光用到的pwm等程序都与开发板的相关联,str_en:The power on/off, reset interface, pinmux settings, and PWM used for backlight of the screen module are all associated with the development board
str_cn:屏幕驱动、TP驱动、背光驱动的编写需要基于上面提供的这些宏定义、IO接口来实现,str_en:The writing of the screen driver, TP driver, and backlight driver needs to be implemented based on the provided macro definitions and IO interfaces above
str_cn:最终将实现的屏幕驱动、TP驱动、背光驱动汇集成一个menuconfig菜单，供开发板选择,str_en:Ultimately, the implemented screen driver, TP driver, and backlight driver are aggregated into a menuconfig menu for the development board to choose from
str_cn:此处以eh-lb525板子，屏幕模组（nv3051f屏驱+gt911触控驱动）， aw9364背光驱动芯片 为例,str_en:Here is an example with the eh-lb525 board, screen module (nv3051f screen drive + gt911 touch control drive), and aw9364 backlight drive chip
str_cn:屏幕和TP上下电、复位接口实现、通信接口的pinmux配置等,str_en:Implementation of power on/off and reset interfaces for the screen and TP, pinmux configuration for communication interfaces, etc.
str_cn:屏幕和TP上下电、复位管脚的定义、pwm背光引脚的定义,str_en:Definition of power on/off and reset pins for the screen and TP, definition of PWM backlight pins
str_cn:屏幕模组的menuconfig菜单定义（汇集屏驱、TP驱动、背光类型、以及屏幕模组分辨率的宏定义）,str_en:Menuconfig menu definition for the screen module (gathering macro definitions for screen drive, TP drive, backlight type, and screen module resolution)
str_cn:nv3051f1屏幕驱动的目录,str_en:Directory for the nv3051f1 screen driver
str_cn:屏驱的实现,str_en:Implementation of the screen driver
str_cn:编译链接文件,str_en:Compilation link file
str_cn:gt911触控驱动的目录,str_en:Directory for the gt911 touch driver
str_cn:触控驱动的c文件,str_en:C file for the touch driver
str_cn:触控驱动的头文件,str_en:Header file for the touch driver
str_cn:aw9364背光驱动芯片，背光设备“lcdlight”,str_en:Aw9364 backlight driver chip, backlight device "lcdlight"
str_cn:背光驱动芯片的c文件,str_en:C file for the backlight driver chip
str_cn:背光驱动芯片的头文件,str_en:Header file for the backlight driver chip
str_cn:屏驱IC、触控IC、背光IC的宏定义处,str_en:Location of macro definitions for screen IC, touch IC, and backlight IC
str_cn:TP驱动管理层，对应用层提供“touch”设备,str_en:TP driver management layer, providing the "touch" device to the application layer
str_cn:LCD驱动的管理层，对应用层提供“lcd”设备,str_en:LCD driver management layer, providing the "lcd" device to the application layer
str_cn:屏幕调试工程, 调用“lcd”和“touch"设备,str_en:Screen debugging project, calling the "lcd" and "touch" devices
str_cn:驱动层(drv_lcd.c) --- 实现了名为“lcd”的rt_device，供上层操作屏幕,str_en:Driver layer (drv_lcd.c) - implements an rt_device named "lcd" for upper-layer screen operations
str_cn:中间绿色部分具体的驱动代码（为客户添加屏幕驱动的主要代码）,str_en:The middle green part is the specific driver code (the main code for customers to add screen drivers)
str_cn:板级IO接口文件(bsp_lcd_tp.c, 或 drv_io.c) --- 为屏幕驱动提供统一的上电、下电、复位的接口,str_en:Board-level IO interface files (bsp_lcd_tp.c or drv_io.c) - provide a unified interface for powering on, powering off, and resetting the screen driver
str_cn:背光设备”lcdlight" --- 为屏幕驱动提供统一的背光控制接口,str_en:Backlight device "lcdlight" - provides a unified backlight control interface for the screen driver
str_cn:HAL层（bf0_hal_lcdc.c） --- 为屏幕驱动提供基本统一的参数配置、LCD寄存器读写等接口,str_en:HAL layer (bf0_hal_lcdc.c) - provides a basically unified parameter configuration, LCD register read/write, etc., interface for the screen driver
str_cn:思澈的屏驱框架支持同时注册多个屏驱到系统，通过宏`LCD_DRIVER_EXPORT2`生成一个特殊段名的变量，链接到一起,str_en:SiChu's screen driver framework supports registering multiple screen drivers to the system simultaneously, generating a specially named variable via the `LCD_DRIVER_EXPORT2` macro, linked together
str_cn:在nv3051f1.c中通过LCD_DRIVER_EXPORT2将屏驱的回调函数注册到系统，每个函数的详细解析请参考屏驱回调函数,str_en:In nv3051f1.c, the callback functions of the screen driver are registered to the system via LCD_DRIVER_EXPORT2. For detailed analysis of each function, please refer to the screen driver callback functions
str_cn:【必选】，屏驱初始函数(包括复位，初始化程序等),str_en:[Mandatory], screen driver initialization function (including reset, initialization program, etc.)
str_cn:【必选】，屏幕在位检测函数,str_en:[Mandatory], screen presence detection function
str_cn:【必选】，屏幕打开,str_en:[Mandatory], turn on the screen
str_cn:【必选】，屏幕关闭,str_en:[Mandatory], turn off the screen
str_cn:【必选】，设置屏幕接受数据时的区域（2A,2B 的区域）,str_en:[Mandatory], set the area when the screen receives data (area 2A, 2B)
str_cn:可选，写一个像素点到屏幕上,str_en:Optional, write one pixel point to the screen
str_cn:【必选】，写批量像素点到屏幕上,str_en:[Mandatory], write batch pixel points to the screen
str_cn:可选，读屏幕上的一个像素点数据，返回像素的RGB值,str_en:Optional, read one pixel point data on the screen, return the RGB value of the pixel
str_cn:可选，切换输出给屏幕的颜色格式,str_en:Optional, switch the color format output to the screen
str_cn:可选，设置屏幕的亮度,str_en:Optional, set the brightness of the screen
str_cn:可选，进入待机显示模式（低功耗模式）,str_en:Optional, enter standby display mode (low power mode)
str_cn:可选，退出待机显示模式（低功耗模式）,str_en:Optional, exit standby display mode (low power mode)
str_cn:可选，旋转屏幕一定角度,str_en:Optional, rotate the screen by a certain angle
str_cn:可选，批量送数超时后，屏幕自检,str_en:Optional, after batch data transmission times out, perform screen self-check
str_cn:可选，批量送数超时后，屏幕复位,str_en:Optional, after batch data transmission times out, reset the screen
str_cn:可选，屏幕定时ESD检测,str_en:Optional, periodic ESD detection for the screen
str_cn:当系统注册了多个屏幕驱动时，如何判断使用哪个屏驱来驱动当前屏幕，就需要通过屏幕在位检测,str_en:When the system registers multiple screen drivers, determining which screen driver to use to drive the current screen requires screen presence detection
str_cn:方法是先调用每个屏驱的LCD_Init函数，让其初始化，然后在调用LCD_ReadID函数，如果LCD_ReadID函数返回的值与LCD_ID值相同时，认为屏幕在位，则使用该屏驱,str_en:The method is to first call the LCD_Init function of each screen driver to initialize
str_cn:触控部分,str_en:Touch Part
str_cn:触控(TP)框架图,str_en:Touch (TP) Framework Diagram
str_cn:TP驱动注册到系统的接口,str_en:Interface for TP driver registration to the system
str_cn:在gt911.c中通过INIT_COMPONENT_EXPORT注册初始化函数rt_tp_device_init,str_en:Register the initialization function rt_tp_device_init via INIT_COMPONENT_EXPORT in gt911.c
str_cn:然后在rt_tp_device_init里面通过函数rt_touch_drivers_register，将TP驱动注册到系统,str_en:Then, inside rt_tp_device_init, register the TP driver to the system through the function rt_touch_drivers_register
str_cn:背光部分,str_en:Backlight Section
str_cn:非自发光的屏幕一般需要背光,str_en:Non-self-luminous screens generally require backlighting
str_cn:目前屏幕的背光驱动都通过各种办法，实现了一个“lcdlight”的rt_device设备,str_en:The backlight drivers for current screens have implemented an "lcdlight" rt_device device through various methods
str_cn:然后统一在屏驱的回调函数[LCD_SetBrightness](lcd-cb-func-LCD-SetBrightness)内使用,str_en:It is then uniformly used within the screen driver's callback function [LCD_SetBrightness](lcd-cb-func-LCD-SetBrightness)
str_cn:PWM直驱背光,str_en:PWM Direct Drive Backlight
str_cn:这种设备已经在drv_lcd.c里面注册了“lcdlight”的rt_device设备,str_en:This kind of device has already registered the "lcdlight" rt_device device in drv_lcd.c
str_cn:使用的PWM频率默认是1KHz,str_en:The default PWM frequency used is 1KHz
str_cn:里面会用到2个宏`LCD_PWM_BACKLIGHT_INTERFACE_NAME`和`LCD_PWM_BACKLIGHT_CHANEL_NUM`,分别指定了PWM的设备名称和channel号,str_en:Inside, two macros `LCD_PWM_BACKLIGHT_INTERFACE_NAME` and `LCD_PWM_BACKLIGHT_CHANEL_NUM` are used to specify the device name and channel number of PWM respectively
str_cn:这2个宏一般在[Kconfig.board](lcd_driver_folder_strcuture)里面定义,str_en:These two macros are generally defined in [Kconfig.board](lcd_driver_folder_strcuture)
str_cn:注意：需要在menuconfig里面使能`LCD_PWM_BACKLIGHT_INTERFACE_NAME`指定的pwm rt_device,str_en:Note: It is necessary to enable the pwm rt_device specified by `LCD_PWM_BACKLIGHT_INTERFACE_NAME` in menuconfig
str_cn:外部背光驱动,str_en:External Backlight Driver
str_cn:例如aw9364.c，是在sif_aw9364_init函数里面注册的“lcdlight”的rt_device设备,str_en:For example, aw9364.c registers the "lcdlight" rt_device device inside the sif_aw9364_init function
str_cn:里面宏`LCD_BACKLIGHT_CONTROL_PIN`来指定使用哪个GPIO来控制aw9364,str_en:The macro `LCD_BACKLIGHT_CONTROL_PIN` inside specifies which GPIO to use to control aw9364
str_cn:这个宏也在[Kconfig.board](lcd_driver_folder_strcuture)里面定义,str_en:This macro is also defined in [Kconfig.board](lcd_driver_folder_strcuture)
str_cn:LCD&TP工程的通用设置,str_en:General Settings for LCD&TP Projects
str_cn:通常一个硬件PCB对应一个工程,str_en:A hardware PCB usually corresponds to a project
str_cn:一个工程同时可以兼容多个LCD&TP模组,str_en:A project can simultaneously be compatible with multiple LCD&TP modules
str_cn:这些模组使用相同的硬件接口相连,str_en:These modules are connected using the same hardware interface
str_cn:所以我们将这些和具体模组无关的LCD&TP配置放在这里说明,str_en:Therefore, we place these LCD&TP configurations unrelated to specific modules here for explanation
str_cn:屏幕的通用设置,str_en:General Screen Settings
str_cn:上电,str_en:Power On
str_cn:SDK1.0.4以前的版本，开机或睡眠唤醒, 跟随IO的上电一起上电,str_en:For versions prior to SDK1.0.4, power on or wake up from sleep together with IO power on
str_cn:SDK1.0.4以及之后的版本，上电在LCD device内部,str_en:For SDK1.0.4 and later versions, power on is inside the LCD device
str_cn:下电,str_en:Power Off
str_cn:复位,str_en:Reset
str_cn:PINMUX,str_en:PINMUX
str_cn:屏幕的TE的板级配置,str_en:Board-level configuration of screen TE
str_cn:屏幕的TE需要打通硬件信号，接口有3种,str_en:The TE of the screen needs to connect the hardware signals, there are three types of interfaces
str_cn:DSI接口的屏幕TE信号支持走DSI总线，不需要额外的线,str_en:The TE signal of the DSI interface screen supports going through the DSI bus, no extra lines are needed
str_cn:SPI/8080等接口, 只需要将TE脚的pinmux设置成TE管脚,str_en:Interfaces such as SPI/8080, only need to set the pinmux of the TE pin to the TE pin
str_cn:前2种方案硬件上都不支持的情况下，可以用任意GPIO作为TE信号，这种方法TE是靠GPIO的ISR中断，实时性稍差,str_en:If the first two solutions are not supported by the hardware, any GPIO can be used as the TE signal. In this method, TE relies on the GPIO ISR interrupt, and the real-time performance is slightly worse
str_cn:触控的通用设置,str_en:General Touch Settings
str_cn:触控的通信接口rt-device名称，可以是I2C或者SPI接口，具体通信接口调用在驱动内部,str_en:The communication interface rt-device name for touch can be I2C or SPI interface, the specific communication interface call is inside the driver
str_cn:调试工程选择,str_en:Selection of Debugging Project
str_cn:SDKrelease\example\rt_driver工程是一个专门用来调试rt_driver设备的工程,str_en:The SDKrelease\example\rt_driver project is a project specifically used to debug rt_driver devices
str_cn:其中我们为LCD提供了一个显示变色矩形区域的示例,str_en:Among them, we provide an example for LCD that displays a color-changing rectangular area
str_cn:并且为触控增加了一个读取触控并打印的线程,str_en:And a thread for reading touch and printing has been added for touch
str_cn:当前示例中我们选择ec-lb555工程,str_en:In the current example, we choose the ec-lb555 project
str_cn:工程编译烧写后开机直接刷屏和读取触控数据,str_en:After compiling and burning the project, it directly refreshes the screen and reads touch data upon startup
str_cn:建议客户屏幕点亮后，将framebuffer换成全屏的图片再检查一遍, 确保不存在偏移、颜色格式、超出液晶玻璃范围等问题,str_en:It is recommended that after the customer's screen lights up, replace the framebuffer with a full-screen picture and check again to ensure there are no issues such as offset, color format, exceeding the range of the liquid crystal glass, etc.
str_cn:显示一张图片的示例,str_en:An example of displaying a picture
str_cn:读取触控并打印,str_en:Read touch and print
str_cn:确保不存在偏移、颜色格式、超出液晶玻璃范围等问题,str_en:Ensure there are no problems such as offset, color format, exceeding the range of the liquid crystal glass, etc.
str_cn:将TP驱动注册到系统,str_en:Register the TP driver to the system
str_cn:屏幕模组,str_en:Screen module
str_cn:触控所用中断GPIO管脚,str_en:Interrupt GPIO pin used for touch
str_cn:如果触控中断GPIO是使用跨核的pin，需要打开此宏,str_en:If the touch interrupt GPIO uses a cross-core pin, this macro needs to be enabled
str_cn:将framebuffer换成全屏的图片,str_en:Change the framebuffer to a full-screen image
str_cn:开机或睡眠唤醒,str_en:Power on or wake up from sleep
str_cn:跟随IO的上电一起上电,str_en:Power on together with IO power on
str_cn:上电在LCD device内部,str_en:Power on is inside the LCD device
str_cn:关机或睡眠跟随IO一起下电,str_en:Power off or sleep follows IO power down together
str_cn:下电在Touch device内部,str_en:Power down is inside the Touch device
str_cn:很多没有调用复位接口,str_en:Many do not call the reset interface
str_cn:之后的版本如果触控有需要可以在驱动内部probe函数和init函数的头部加上reset,str_en:In later versions, if touch requires, reset can be added at the beginning of the probe function and init function inside the driver
str_cn:触控增加了一个读取触控并打印的线程,str_en:A thread
str_cn:请严格按以下步骤处理文本,str_en:Please process the text strictly according to the following steps
str_cn:首先你要忽略链接和图片等内容,str_en:First, you need to ignore content such as links and images
str_cn:忽略```{toctree}```中的内容,str_en:Ignore the content in ```{toctree}```
str_cn:提取所有中文句子,str_en:Extract all Chinese sentences
str_cn:处理完以后再对非句子的词语进行处理,str_en:After processing, handle non-sentence words
str_cn:合并重复内容,str_en:Merge duplicate content
str_cn:翻译成英文,str_en:Translate into English
str_cn:输出格式,str_en:Output format
str_cn:结果中不能包含任何其他内容,str_en:The result must not contain any other content
str_cn:不同翻译对用分号分隔，并且必须换行,str_en:Different translation pairs are separated by semicolons and must be on a new line
str_cn:每个翻译对必须严格按格式,str_en:Each translation pair must strictly follow the format
str_cn:文本格式为markdown,str_en:The text format is markdown
str_cn:优先按句子进行提取,str_en:Extract by sentence first
str_cn:提取词语,str_en:Extract words
str_cn:多个结果用分号分隔,结果后面增加回车换行,str_en:Multiple results are separated by semicolons, and a carriage return is added after the result
str_cn:对非句子的词语进行处理,str_en:Process non-sentence words
str_cn:忽略非中文内容,str_en:Ignore non-Chinese content
str_cn:严格按格式,str_en:Strictly follow the format
str_cn:不同翻译对用分号分隔,str_en:Different translation pairs are separated by semicolons
str_cn:并且必须换行,str_en:And must be on a new line
str_cn:首先,str_en:First
str_cn:处理完以后,str_en:After processing
str_cn:提取,str_en:Extract
str_cn:合并,str_en:Merge
str_cn:翻译,str_en:Translate
str_cn:输出,str_en:Output
str_cn:格式,str_en:Format
str_cn:结果,str_en:Result
str_cn:内容,str_en:Content
str_cn:句子,str_en:Sentence
str_cn:词语,str_en:Word
str_cn:忽略,str_en:Ignore
str_cn:链接,str_en:Link
str_cn:图片,str_en:Picture
str_cn:文本,str_en:Text
str_cn:步骤,str_en:Step
str_cn:处理,str_en:Process
str_cn:必须,str_en:Must
str_cn:分隔,str_en:Separate
str_cn:换行,str_en:New line
str_cn:严格,str_en:Strictly
str_cn:按,str_en:According to
str_cn:非,str_en:Non
str_cn:和,str_en:And
str_cn:或,str_en:Or
str_cn:的,str_en:Of
str_cn:在,str_en:In
str_cn:为,str_en:For
str_cn:是,str_en:Is
str_cn:有,str_en:Have
str_cn:可以,str_en:Can
str_cn:需要,str_en:Need
str_cn:要,str_en:Want
str_cn:这,str_en:This
str_cn:那,str_en:That
str_cn:它,str_en:It
str_cn:他们,str_en:They
str_cn:我们,str_en:We
str_cn:你,str_en:You
str_cn:我,str_en:I
str_cn:他,str_en:He
str_cn:她,str_en:She
str_cn:谁,str_en:Who
str_cn:什么,str_en:What
str_cn:哪里,str_en:Where
str_cn:何时,str_en:When
str_cn:为什么,str_en:Why
str_cn:如何,str_en:How
str_cn:多少,str_en:How many
str_cn:一些,str_en:Some
str_cn:很多,str_en:A lot of
str_cn:全部,str_en:All
str_cn:部分,str_en:Part
str_cn:没有,str_en:No
str_cn:可能,str_en:Possible
str_cn:应该,str_en:Should
str_cn:会,str_en:Will
str_cn:已经,str_en:Already
str_cn:正在,str_en:Currently
str_cn:将,str_en:Will
str_cn:曾,str_en:Once
str_cn:从未,str_en:Never
str_cn:经常,str_en:Often
str_cn:有时,str_en:Sometimes
str_cn:总是,str_en:Always
str_cn:通常,str_en:Usually
str_cn:偶尔,str_en:Occasionally
str_cn:也许,str_en:Maybe
str_cn:大概,str_en:Probably
str_cn:确实,str_en:Certainly
str_cn:当然,str_en:Of course
str_cn:显然,str_en:Obviously
str_cn:因此,str_en:Therefore
str_cn:所以,str_en:So
str_cn:但是,str_en:But
str_cn:然而,str_en:However
str_cn:尽管,str_en:Although
str_cn:如果,str_en:If
str_cn:除非,str_en:Unless
str_cn:因为,str_en:Because
str_cn:由于,str_en:Due to
str_cn:为了,str_en:In order to
str_cn:通过,str_en:Through
str_cn:根据,str_en:According to
str_cn:关于,str_en:About
str_cn:对于,str_en:For
str_cn:从,str_en:From
str_cn:到,str_en:To
str_cn:上,str_en:On
str_cn:下,str_en:Under
str_cn:前,str_en:Before
str_cn:后,str_en:After
str_cn:左,str_en:Left
str_cn:右,str_en:Right
str_cn:里,str_en:Inside
str_cn:外,str_en:Outside
str_cn:中间,str_en:Middle
str_cn:旁边,str_en:Beside
str_cn:附近,str_en:Nearby
str_cn:远处,str_en:Far away
str_cn:中心,str_en:Center
str_cn:边缘,str_en:Edge
str_cn:角落,str_en:Corner
str_cn:顶部,str_en:Top
str_cn:底部,str_en:Bottom
str_cn:前面,str_en:Front
str_cn:后面,str_en:Back
str_cn:左侧,str_en:Left side
str_cn:右侧,str_en:Right side
str_cn:内部,str_en:Interior
str_cn:外部,str_en:Exterior
str_cn:中央,str_en:Central
str_cn:周围,str_en:Surrounding
str_cn:四周,str_en:Around
str_cn:上方,str_en:Above
str_cn:下方,str_en:Below
str_cn:左边,str_en:Left
str_cn:右边,str_en:Right
str_cn:里面,str_en:Inside
str_cn:外面,str_en:Outside
str_cn:之中,str_en:Among
str_cn:之间,str_en:Between
str_cn:之内,str_en:Within
str_cn:之外,str_en:Beyond
str_cn:之上,str_en:On top of
str_cn:之下,str_en:Underneath
str_cn:之前,str_en:Prior to
str_cn:之后,str_en:Afterwards
str_cn:左侧,str_en:Left
str_cn:右侧,str_en:Right
str_cn:内侧,str_en:Inner side
str_cn:外侧,str_en:Outer side
str_cn:顶,str_en:Top
str_cn:底,str_en:Bottom
str_cn:前,str_en:Front
str_cn:后,str_en:Back
str_cn:中,str_en:Middle
str_cn:旁,str_en:Beside
str_cn:近,str_en:Near
str_cn:远,str_en:Far
