str_cn:在bootloader代码中、系统启动和休眠唤醒时发生的死机，Jlink或串口都可能已经不通，死机现象往往很难定位,str_en:Crashes that occur in the bootloader code, during system startup, and during sleep wake-up may cause Jlink or the serial port to be unresponsive, and the crash phenomenon is often difficult to locate;
str_cn:可以采取在确认还没死机的代码位置添加断点，然后再通过SifliUsartServer或者Jlink在线进行连接，进行在线单步运行定位问题,str_en:You can add breakpoints at the confirmed non-crash code locations, then connect online via SifliUsartServer or Jlink, and perform online single-step operation to locate the issue;
str_cn:可以在系统复位最开始的时候添加断点,str_en:Breakpoints can be added at the very beginning of system reset;
str_cn:HCPU启动汇编代码为`drivers/cmsis/sf32lb55x/Templates/arm/startup_bf0_hcpu.S`,str_en:The HCPU startup assembly code is `drivers/cmsis/sf32lb55x/Templates/arm/startup_bf0_hcpu.S`;
str_cn:LCPU启动汇编代码为`drivers/cmsis/sf32lb55x/Templates/arm/startup_bf0_lcpu.S`,str_en:The LCPU startup assembly code is `drivers/cmsis/sf32lb55x/Templates/arm/startup_bf0_lcpu.S`;
str_cn:在Reset_Handler中的第一条指令去掉注释 ';', 变为`B .`,str_en:In Reset_Handler, remove the comment ';' from the first instruction, changing it to `B .`;
str_cn:这样MCU启动，就会停留在第一条指令，当Jlink连接成功后，结合Ozone或者keil可以改变PC寄存器 (+2)， 设置所需断点，从而调试初始化过程,str_en:This way, when the MCU starts up, it will stay at the first instruction. After Jlink connects successfully, you can change the PC register (+2) using Ozone or Keil, set the required breakpoints, and thus debug the initialization process;
str_cn:也可以在c文件`SystemInit()`或者`rtthread_startup()`内添加汇编指令:` __asm("B .");`,str_en:You can also add the assembly instruction `__asm("B .");` inside the C files `SystemInit()` or `rtthread_startup()`;
str_cn:可以使系统停留在这个指令，这个时候，再连接Jlink， 结合Ozone或者keil改变PC寄存器 (+2)， 继续单步或者断点调试,str_en:This makes the system stay at this instruction. At this point, connect Jlink again, use Ozone or Keil to change the PC register (+2), and continue single-step or breakpoint debugging;
str_cn:请参考Ozone工具相关章节,str_en:Please refer to the relevant chapter on the Ozone tool;
str_cn:[Ozone或者keil如何单步debug Lcpu],str_en:[How to single-step debug Lcpu with Ozone or Keil];
str_cn:导入axf文件的方法,str_en:Methods for importing axf files;
str_cn:通过命令导入,str_en:Import via command;
str_cn:通过脚本文件导入,str_en:Import via script file;
str_cn:在keil根目录增加脚本文件loadaxf.ini，内容如下,str_en:Add the script file loadaxf.ini in the keil root directory, with the following content;
str_cn:注意：axf文件bf0_ap.axf，需要放到keil根目录下,str_en:Note: The axf file bf0_ap.axf needs to be placed in the keil root directory;
str_cn:添加loadaxf.ini 到配置界面,str_en:Add loadaxf.ini to the configuration interface;
