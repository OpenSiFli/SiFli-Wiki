str_cn:SF32LB551的Flash3调试Nand Flash流程,str_en:The process of debugging Nand Flash for SF32LB551's Flash3;
str_cn:确保打开QSPI Controller 3 Enable，并设置好内存大小,str_en:Ensure that QSPI Controller 3 Enable is turned on and the memory size is set;
str_cn:由于QSPI3会占用PA49和PA51,因此hcpu的log必须得改成segger输出,str_en:Since QSPI3 will occupy PA49 and PA51, the log of hcpu must be changed to segger output;
str_cn:查看QSPI3用到的PA44，PA45，PA47，PA49，PA51，PA55模式设置如下，确认其他地方没有使用这些Pin,str_en:Check the mode settings of PA44, PA45, PA47, PA49, PA51, PA55 used by QSPI3 as follows, and confirm that these Pins are not used elsewhere;
str_cn:打开宏#define DRV_SPI_FLASH_TEST，支持spi_flas读写flash的测试shell命令,str_en:Open the macro #define DRV_SPI_FLASH_TEST to support the test shell command for spi_flash read and write flash;
str_cn:当今的NAND Flash读/写需要按照一个page，但是必须以block大小擦除,str_en:Current NAND Flash read/write needs to be done in a page, but must be erased in block size;
str_cn:每个page有2176个单元，所以每个page就是2048Byte + 128Byte（SA）,str_en:Each page has 2176 units, so each page is 2048Byte + 128Byte (SA);
str_cn:每个Block有64个page组成，所以每个Block容量为2048x64=131,072（0x20000），即为131,072Byte + 8KByte （SA）,str_en:Each Block consists of 64 pages, so the capacity of each Block is 2048x64=131,072 (0x20000), which is 131,072Byte + 8KByte (SA);
str_cn:新的flash由于不在nand_cmd_id_pool列表中，采用spi_flash -id 0 2命令去读flash3的id，会返回0xff,str_en:The new flash is not in the nand_cmd_id_pool list, using the spi_flash -id 0 2 command to read the id of flash3 will return 0xff;
str_cn:注意：如果逻辑分析仪抓读ID的时序，需要在上电的时候抓，读ID操作在上电的时候,str_en:Note: If the logic analyzer captures the timing of reading ID, it needs to be captured when powering on, the operation of reading ID occurs when powering on;
str_cn:把spi_flash -id 0 2命令读回的ID，读回值如下,str_en:The ID read back by the spi_flash -id 0 2 command, the read back value is as follows;
str_cn:新jlink的elf 驱动，uart3里面在下载0x68000000地址时，目前有添加打印ID的log,str_en:The elf driver of the new jlink, uart3 currently has added a log for printing ID when downloading at address 0x68000000;
str_cn:根据命令方式在nand_table.c中nand_cmd_id_pool列表中添加进对应的组别,str_en:Add the corresponding group into the nand_cmd_id_pool list in nand_table.c according to the command method;
str_cn:如果命令跟type2的命令一样，就能读写正常，通常修改nand_table.c文件nand_cmd_id_pool和nand_cmd_table_list后，就能进行读擦写操作了,str_en:If the command is the same as the type2 command, it can read and write normally. Usually, after modifying the nand_cmd_id_pool and nand_cmd_table_list in the nand_table.c file, read, erase, and write operations can be performed;
str_cn:如果4个Type中，逻辑分析仪抓取的时序跟调试的Nand Flash的几组type时序都不相一致，就需要另外定义一个Type来发时序,str_en:If among the four Types, the timing captured by the logic analyzer does not match with any of the several groups of type timings for the debugged Nand Flash, then another Type needs to be defined to send the timing;
str_cn:SF32LB555 Lcpu挂载 Flash4流程,str_en:The process of mounting Flash4 for SF32LB555 Lcpu;
str_cn:需要将\middleware\sifli_lib\lib下面的相关rom lib文件里面flash相关函数拿掉，不要用rom里面的函数，采用代码中的函数,str_en:Need to remove the flash-related functions inside the relevant rom lib files under \middleware\sifli_lib\lib, do not use the functions inside the rom, adopt the functions in the code;
str_cn:修改\middleware\system下面的bf0_pm_a0.c文件,str_en:Modify the bf0_pm_a0.c file under \middleware\system;
str_cn:修改\rtos\rtthread\bsp\sifli\drivers下面的drv_spi_flash.c文件,str_en:Modify the drv_spi_flash.c file under \rtos\rtthread\bsp\sifli\drivers;
str_cn:修改\watch\sifli\project\ec-lb555_lcpu\linker_scripts下面的link_lcpu_ram.sct分区文件，将一些算法放进flash4中,str_en:Modify the link_lcpu_ram.sct partition file under \watch\sifli\project\ec-lb555_lcpu\linker_scripts, put some algorithms into flash4;
str_cn:修改\watch\sifli\project\ec-lb555_lcpu的menuconfig，打开QSPI FLASH4支持,str_en:Modify the menuconfig of \watch\sifli\project\ec-lb555_lcpu, open QSPI FLASH4 support;
str_cn:修改\watch\sifli\project\ec-lb555_lcpu下面的postbuild.bat文件，增加新的编译文件bin,str_en:Modify the postbuild.bat file under \watch\sifli\project\ec-lb555_lcpu, add new compilation file bin;
str_cn:修改\watch\sifli\project\ec-lb555_lcpu下面的SConstruct文件，增加新的编译文件bin,str_en:Modify the SConstruct file under \watch\sifli\project\ec-lb555_lcpu, add new compilation file bin;
str_cn:编译的时候需要将ec-lb555_lcpu下的build手动删除掉，如果之前已经存在了bin文件，可能会出现编译不过的情况,str_en:When compiling, you need to manually delete the build under ec-lb555_lcpu, if there was already a bin file before, there may be a situation where the compilation fails;
str_cn:SN和MAC在产线下载版本时写入到设备中，以TLV格式保存,str_en:SN and MAC are written into the device in the production line download version, saved in TLV format;
str_cn:TLV 是一种常用的数据编码格式，它由标签（Type）、长度（Length）和值（Value）三部分组成，即按照ID+LEN+DATA排放,str_en:TLV is a commonly used data encoding format, it consists of three parts: tag (Type), length (Length) and value (Value), that is, arranged according to ID+LEN+DATA;
str_cn:SN的type编号为：FACTORY_CFG_ID_SN,对应值为2,str_en:The type number of SN is: FACTORY_CFG_ID_SN, the corresponding value is 2;
str_cn:value组成：描述符+序号(8byte) 如：sifli_00000001,str_en:The composition of value: descriptor + serial number (8byte) such as: sifli_00000001;
str_cn:获取sn示例代码,str_en:Get sn sample code;
str_cn:获取MAC地址方法,str_en:Get MAC address method;
str_cn:无内容,str_en:No content;
