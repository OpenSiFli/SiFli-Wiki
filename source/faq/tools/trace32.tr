str_cn:用Trace32恢复Hcpu死机现场,str_en:Using Trace32 to recover Hcpu crash scene
str_cn:Dump出内存和编译生成的axf文件放在一个目录内,str_en:Dump the memory and the compiled axf file into the same directory
str_cn:运行sdk目录下\tools\crash_dump_analyser\simarm\t32marm.exe,str_en:Run t32marm.exe located in the sdk directory \tools\crash_dump_analyser\simarm\
str_cn:查看Hcpu死机，点击HA按钮（HCPU assertion）,str_en:Check Hcpu crash, click the HA button (HCPU assertion)
str_cn:如果有些bin不存在（例如有的dump没有PSRAM2），可以勾掉去掉,str_en:If some bins are missing (e.g., some dumps do not have PSRAM2), you can uncheck them
str_cn:点击 “run_next_step”按钮加载,str_en:Click the "run_next_step" button to load
str_cn:加载成功后显示下图的现场信息,str_en:After successful loading, the scene information shown in the figure below will be displayed
str_cn:内存和相关地址关系会建立起来，可以参考各芯片手册的Memory地址空间,str_en:The relationship between memory and related addresses will be established, refer to the Memory address space in each chip manual
str_cn:如果现场没有恢复，需要查看dump的bin是否正常,str_en:If the scene is not recovered, check whether the dumped bins are normal
str_cn:查看log.txt内的PC等寄存器是否正确读出来,str_en:Check whether the PC and other registers in log.txt are correctly read
str_cn:在特定情况下，比如psram没有准备好，可以修改对应的dump脚本,str_en:In specific cases, such as when psram is not ready, you can modify the corresponding dump script
str_cn:可以在Window菜单切换显示的窗口,str_en:You can switch the displayed window in the Window menu
str_cn:heapAllocation窗口显示了系统中所有heap pool的分配情况,str_en:The heapAllocation window shows the allocation of all heap pools in the system
str_cn:system heap：rt_malloc和lv_mem_alloc使用的pool,str_en:system heap: pool used by rt_malloc and lv_mem_alloc
str_cn:各个memheap_pool: 使用rt_memheap_init创建的pool，分配和释放使用rt_memheap_alloc和rt_memheap_free,str_en:Each memheap_pool: pool created using rt_memheap_init, allocated and freed using rt_memheap_alloc and rt_memheap_free
str_cn:BLOCK_ADDR: 分配的内存块的起始地址，包括了管理项,str_en:BLOCK_ADDR: The starting address of the allocated memory block, including management items
str_cn:BLOCK_SIZE: 申请的内存大小，不包括管理项长度,str_en:BLOCK_SIZE: The size of the requested memory, excluding the length of management items
str_cn:USED：是否已分配，1表示已分配，0表示未分配,str_en:USED: Whether it is allocated, 1 means allocated, 0 means not allocated
str_cn:TICK: 申请时间，单位为OS tick，即1ms,str_en:TICK: Application time, in OS ticks, i.e., 1ms
str_cn:RETURN ADDR: 申请者地址,str_en:RETURN ADDR: Applicant address
str_cn:没有显示异常栈的处理,str_en:No display of exception stack processing
str_cn:做完前面几个步骤，有时候不会显示死机的现场栈，可能是dump内容中没有保存或者保存的异常,str_en:After completing the previous steps, sometimes the crash scene stack will not be displayed, possibly because the dump content was not saved or saved abnormally
str_cn:从Jlink halt的log信息加载现场栈,str_en:Load the scene stack from the Jlink halt log information
str_cn:HR(HCPU Registers)按钮用于恢复没有走到异常处理程序的CPU寄存器,str_en:The HR (HCPU Registers) button is used to restore CPU registers that did not reach the exception handler
str_cn:点击按钮后选择导出现场的 log.txt 文件，他将把里面HCPU的16个寄存器回填到trace32,str_en:After clicking the button, select the exported log.txt file, which will backfill the 16 HCPU registers into trace32
str_cn:从log里面打印的16个寄存器中，回填到trace32的register窗口中,str_en:From the 16 registers printed in the log, backfill them into the register window of trace32
str_cn:直接从hardfault的现场手动恢复，参考6.6 Trace32手动恢复死机现场方法,str_en:Manually recover directly from the hardfault scene, refer to section 6.6 Trace32 manual crash scene recovery method
str_cn:用Trace32恢复LCPU死机现场,str_en:Using Trace32 to recover Lcpu crash scene
str_cn:与HCPU的恢复现场类似，选择LA按钮，按提示操作即可,str_en:Similar to HCPU scene recovery, select the LA button and follow the prompts
str_cn:LCPU 多了rom axf的同步加载，可以按需要勾选,str_en:LCPU has additional rom axf synchronous loading, which can be checked as needed
str_cn:Trace32常用命令,str_en:Trace32 common commands
str_cn:菜单：View->List Soure，调出查看源码窗口，或者命令L 10063c或者l 0x10063c， 可以查看PC指针为0x10063c的代码,str_en:Menu: View->List Soure, bring up the source code window, or command L 10063c or l 0x10063c, you can view the code where the PC pointer is 0x10063c
str_cn:菜单：VarT->View, 或者命令：v.v * ，调出查看变量窗口，可以查找变量，函数，支持*通配符,str_en:Menu: VarT->View, or command: v.v *, bring up the variable window, you can search for variables, functions, supports * wildcard
str_cn:菜单：CPU->CPU Registers,或者命令：r ，调出寄存器窗口，修改寄存器值,str_en:Menu: CPU->CPU Registers, or command: r, bring up the register window, modify register values
str_cn:菜单：View->Dump...,或者命令：data.dump，调出查看内存地址窗口，比如输入框内输入0x200c0000，可以查看0x200c0000的内存情况,str_en:Menu: View->Dump..., or command: data.dump, bring up the memory address window, for example, enter 0x200c0000 in the input box to view the memory at 0x200c0000
str_cn:菜单：View->StackFrame with locals， 或者命令：frame /locals /caller ，查看调用栈和本地变量,str_en:Menu: View->StackFrame with locals, or command: frame /locals /caller, view the call stack and local variables
str_cn:可以命令执行tools\crash_dump_analyser\script\下面的脚本,str_en:You can execute the scripts under tools\crash_dump_analyser\script\ with commands
str_cn:显示所有线程，有显示运行状态和压栈地址和优先级,str_en:Display all threads, showing running status, stack addresses, and priority
str_cn:可以命令切换其他线程，如下图，切换到TP线程,str_en:You can switch to other threads with commands, as shown below, switch to the TP thread
str_cn:可以查看线程切换历史,str_en:You can view thread switching history
str_cn:可以查看timer的使用情况,str_en:You can view the usage of timers
str_cn:内存地址强制转为结构体的方法,str_en:Method to forcibly convert memory address to structure
str_cn:结构体 `struct rt_pm _pm`,str_en:Structure `struct rt_pm _pm`
str_cn:转换命令：`(struct rt_pm *)0x101fa2b9 `,str_en:Conversion command: `(struct rt_pm *)0x101fa2b9 `
str_cn:内存地址强制转为uint8，uint16等变量的方法,str_en:Method to forcibly convert memory address to uint8, uint16, etc. variables
str_cn:`(uint16_t *)0x101fa2b9`,str_en:`(uint16_t *)0x101fa2b9`
str_cn:trace32恢复dump出来的内存文件在不同电脑恢复现场，会出现如下只显示汇编无法显示C语言的情况,str_en:When trace32 recovers dumped memory files on different computers, the following situation may occur where only assembly is displayed and C language cannot be displayed
str_cn:原因是执行save_ram_a0.bat进行dump内存工程的路径，跟你trace32复现路径工程所在位置不一致,str_en:The reason is that the path of the dump memory project executed by save_ram_a0.bat is inconsistent with the location of your trace32 reproduction path project
str_cn:我们可以采用重定位工程路径的方式来解决这个问题,str_en:We can solve this problem by relocating the project path
str_cn:选择对应c文件所在的工程路径，选择这一个文件后，所有工程路径，都进行了重定位,str_en:Select the project path where the corresponding c file is located. After selecting this file, all project paths are relocated
str_cn:重定位的trace32界面如下：除了在lib中的代码，都能显示出C语言代码,str_en:The relocated trace32 interface is as follows: Except for the code in lib, all can display C language code
str_cn:工程路径重定位,str_en:Project path relocation
str_cn:分配信息列表中的字段含义为,str_en:The meaning of fields in the allocation information list is
