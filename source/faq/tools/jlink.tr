str_cn:如何用JLINK RTT打印log信息,str_en:How to print log information using JLINK RTT?
str_cn:目前我们默认软件Hcpu的log是从uart1 PA17/PA19(SF32LB555), PA49/51(SF32LB551)输出log,str_en:The current default software Hcpu log is output from uart1 PA17/PA19 (SF32LB555), PA49/51 (SF32LB551)
str_cn:Lcpu的log是从uart3 输出,str_en:The Lcpu log is output from uart3
str_cn:客户只引出了uart3 PB45/PB46，或者Uart1被占用,str_en:The customer only leads out uart3 PB45/PB46, or Uart1 is occupied
str_cn:考虑到uart3是连接到lcpu，后面lcpu也需要输出log，可以采用menuconfig改成swd输出log,str_en:Considering that uart3 is connected to lcpu, and later lcpu also needs to output log, you can use menuconfig to change it to swd output log
str_cn:Jlink swd打印hcpu的log 修改方法,str_en:Modification method for Jlink swd printing hcpu log
str_cn:进入到SDK\example\rt_driver\project\ec-lb555目录,str_en:Enter the SDK\example\rt_driver\project\ec-lb555 directory
str_cn:menuconfig->Third party packages->选中Segger RTT package,str_en:menuconfig->Third party packages->Select Segger RTT package
str_cn:menuconfig->RTOS -> RT-Thread Kernel->Kernel Device Object->the devices name for console 改成segger,str_en:menuconfig->RTOS -> RT-Thread Kernel->Kernel Device Object->Change the devices name for console to segger
str_cn:连接jlink,str_en:Connect jlink
str_cn:运行Xshell，secureCRT等软件，通过telnet（hostname: 127.0.0.1 port: 19021）连接到jlink RTT viewer，查看日志；支持输出输入,str_en:Run Xshell, secureCRT and other software, connect to jlink RTT viewer via telnet (hostname: 127.0.0.1 port: 19021), view logs support output input
str_cn:如果Hcpu从standby醒来或者重启，需要重连jlink RTT viewer,str_en:If Hcpu wakes up from standby or restarts, it is necessary to reconnect jlink RTT viewer
str_cn:Hcpu的log通过Jlink segger打印不出来,str_en:Hcpu's log cannot be printed through Jlink segger
str_cn:新版本sdk为了优化内存，Jlink的Control block address： _SEGGER_RTT变量从HPSYS SRAM0x20000000改链接到了内存区域 HPSYS ITCM RAM0x00010000 0x0001FFFF 64*1024,str_en:The new version of sdk optimizes memory, Jlink's Control block address: _SEGGER_RTT variable is changed from HPSYS SRAM0x20000000 to memory area HPSYS ITCM RAM0x00010000 0x0001FFFF 64*1024
str_cn:而Jlink默认搜索内存从0x20000000开始，因而搜索不到，连接不成功,str_en:And Jlink's default memory search starts from 0x20000000, so it cannot be found and the connection fails
str_cn:老版本0.9.7编译后的地址在0x20000000之后，jlink能自动连接搜索到,str_en:The address compiled by the old version 0.9.7 is after 0x20000000, and jlink can automatically connect and search
str_cn:J-Link RTT Viewer.exe 内指定地址，该地址可以从map文件中搜索到,str_en:Specify the address in J-Link RTT Viewer.exe, which can be searched from the map file
str_cn:改用Ozone.exe，Ozone.exe能通过axf文件中找到该地址，存在SetRTTAddr地址命令,str_en:Switch to Ozone.exe, Ozone.exe can find this address through the axf file, there is a SetRTTAddr address command
str_cn:做一个JLinkScript的命令，在jlink启动时会自动调用设置或者搜索Control block address范围,str_en:Make a JLinkScript command, which will automatically call to set or search the Control block address range when jlink starts
str_cn:对应：xml文件修改,str_en:Corresponding: xml file modification
str_cn:推荐用rttview.exe和telnet 127.0.0.1查看log的使用,str_en:It is recommended to use rttview.exe and telnet 127.0.0.1 to view log usage
str_cn:jlink连接成功后， 用mem32读 ， 用w4写， 用erase 擦写,str_en:After jlink is successfully connected, use mem32 to read, w4 to write, and erase to erase
str_cn:跟jlink.exe在一个目录，有一个jflash工具,str_en:In the same directory as jlink.exe, there is a jflash tool
str_cn:savebin命令读取,str_en:Read with savebin command
str_cn:如上0x101b4000为内存地址，0x100000为读写内存大小单位为byte,str_en:As above, 0x101b4000 is the memory address, 0x100000 is the read-write memory size in bytes
str_cn:save出来的bin，再烧写回去方法,str_en:The method to burn the saved bin back
str_cn:halt，go命令,str_en:halt, go commands
str_cn:输入命令h，可以让CPU停下来，查看PC指针所在位置,str_en:Enter command h, you can stop the CPU and check the location of the PC pointer
str_cn:输入命令g，可以让CPU继续跑起来,str_en:Enter command g, you can let the CPU continue running
str_cn:常用于配合 __asm("B .") 指令来用，当代码中执行到该指令后，会停住,str_en:Often used in conjunction with the __asm("B .") instruction, when the code executes to this instruction, it will stop
str_cn:如果此时PC指针在0x10140D28，此时PC指针加2，输入setpc 0x10140D2A， 可以跳过 __asm("B .")指令，继续往下运行,str_en:If the PC pointer is at 0x10140D28 at this time, add 2 to the PC pointer, enter setpc 0x10140D2A, you can skip the __asm("B .") instruction and continue running
str_cn:erase 0x00000000.0x0000FFFF,str_en:Erase 0x00000000.0x0000FFFF
str_cn:loadbin <filename> <address>-- 下载filename文件到地址,str_en:loadbin <filename> <address>-- Download filename file to address
str_cn:usb--------连接目标板,str_en:usb--------Connect target board
str_cn:r---------重启日标板,str_en:r---------Restart the target board
str_cn:halt-------停止cpu运行的程序,str_en:halt-------Stop the program running on the cpu
str_cn:loadbin----加载可执行的二进制文件,str_en:loadbin----Load executable binary file
str_cn:g-------跳到代码段地址执行,str_en:g-------Jump to the code segment address to execute
str_cn:s-------单步执行 (调试用),str_en:s-------Single step execution (for debugging)
str_cn:setpc-----设置pc寄存器的值(调试用),str_en:setpc
str_cn:解决方案,str_en:Solution
str_cn:考虑到uart3是连接到lcpu，后面lcpu也需要输出log， 可以采用menuconfig改成swd输出log,str_en:Considering that uart3 is connected to lcpu and lcpu also needs to output logs later, menuconfig can be used to switch to swd for log output.
str_cn:方法,str_en:Method
str_cn:如下图,str_en:As shown in the figure below
str_cn:打开,str_en:Open
str_cn:Jlink读写flash的内容,str_en:Reading and writing flash content using J-Link
str_cn:其他常用命令,str_en:Other common commands
