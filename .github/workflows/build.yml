name: Build and Upload Documentation

on:
  push:
    branches:
      - main
      - en
  workflow_dispatch:  # 允许手动触发

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch (Chinese)
        uses: actions/checkout@v4
        with:
          ref: main
          path: main-repo

      - name: Checkout en branch (English)
        uses: actions/checkout@v4
        with:
          ref: en
          path: en-repo

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f main-repo/requirements.txt ]; then pip install -r main-repo/requirements.txt; fi

      - name: Build Chinese documentation
        run: |
          cd main-repo
          sphinx-build -b html ./source ./build -E

      - name: Build English documentation
        run: |
          cd en-repo
          sphinx-build -b html ./source ./build -E

      - name: Merge English docs into Chinese
        run: |
          # 将英文版本复制到中文版本的 en 目录
          mkdir -p main-repo/build/en
          cp -r en-repo/build/* main-repo/build/en/
          # 切换到 main-repo 目录进行后续操作
          cd main-repo
      
      - name: compress png
        run: |
          cd main-repo
          python3 ./tools/compress_png.py

      - name: Archive documentation
        uses: actions/upload-artifact@v4
        with:
          name: wiki
          path: |
            main-repo/build
          retention-days: 7
      
      - name: Install COSCMD
        run: |
          pip install coscmd

      - name: Configure COSCMD
        run: |
          coscmd config -a ${{ secrets.COS_DOCS_SECRET_ID }} -s ${{ secrets.COS_DOCS_SECRET_KEY }} -b ${{ secrets.COS_DOCS_BUCKET }} -r ${{ secrets.COS_DOCS_REGION }}

      - name: Upload to COS
        run: |
          cd main-repo
          coscmd upload -rs --delete --yes ./build/ /
          echo "Uploaded documentation for wiki to COS successfully."
      
      - name: Install TCCLI
        run: |
          pip install tccli
      
      - name: Purge CDN Cache
        run: |
          export TENCENTCLOUD_SECRET_ID=${{ secrets.COS_DOCS_SECRET_ID }}
          export TENCENTCLOUD_SECRET_KEY=${{ secrets.COS_DOCS_SECRET_KEY }}
          export TENCENTCLOUD_REGION=${{ secrets.COS_DOCS_REGION }}
          tccli cdn PurgePathCache --cli-unfold-argument --Paths 'https://wiki.sifli.com/' --FlushType flush
